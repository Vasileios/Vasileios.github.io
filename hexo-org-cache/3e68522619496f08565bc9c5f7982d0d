{"md5":"d9d26c557ad8c6ae89bfbcfaa4d94945","content":"<div id=\"content\">\n\n<div id=\"outline-container-orgadc7c46\" class=\"outline-2\">\n<h2 id=\"orgadc7c46\">Weaving voices - Πλεκτόφωνο</h2>\n</div>\n\n<div id=\"outline-container-orgc956a36\" class=\"outline-2\">\n<h2 id=\"orgc956a36\">Adafruit MPR121 on Raspberry pi</h2>\n</div>\n\n<div id=\"outline-container-org46d5173\" class=\"outline-2\">\n<h2 id=\"org46d5173\">Soldering</h2>\n<div class=\"outline-text-2\" id=\"text-org46d5173\">\n<p>\nPrepare the header strip, add the breakout board, and solder\n</p>\n\n<p>\nsee more <a href=\"https://learn.adafruit.com/adafruit-mpr121-12-key-capacitive-touch-sensor-breakout-tutorial/assembly\">here</a>\n</p>\n\n<p>\nAfter you've soldered the sensor to the header strip start wiring.\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-orgac15896\" class=\"outline-2\">\n<h2 id=\"orgac15896\">Wiring</h2>\n</div>\n\n<div id=\"outline-container-org63d4455\" class=\"outline-2\">\n<h2 id=\"org63d4455\">Wiring raspberry pi with MPR121Adafruit*</h2>\n<div class=\"outline-text-2\" id=\"text-org63d4455\">\n<p>\nPlace the MPR121 board into a breadboard and connect its inputs to the electrodes you plan to use (for more info see <a href=\"https://learn.adafruit.com/adafruit-mpr121-12-key-capacitive-touch-sensor-breakout-tutorial/wiring\">here</a>).  Then follow the wiring below for your platform to connect the MPR121 to an I2C communication channel.\nRaspberry Pi\nOn a Raspberry Pi connect the hardware as follows.\n</p>\n\n\n\n<div class=\"figure\">\n<p><img src=\"Adampr121RPI.jpg\"  />\n</p>\n</div>\n\n<p>\nFor more info see <a href=\"https://learn.adafruit.com/mpr121-capacitive-touch-sensor-on-raspberry-pi-and-beaglebone-black/hardware\">here</a>\n</p>\n\n<p>\n<b>Note</b>: Make sure you've enabled I2C on your Raspberry Pi!\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-orgab91677\" class=\"outline-2\">\n<h2 id=\"orgab91677\">Configuring I2C</h2>\n<div class=\"outline-text-2\" id=\"text-orgab91677\">\n<p>\nI2C is a very commonly used standard designed to allow one chip to talk to another. So, since the Raspberry Pi can talk I2C we can connect it to a variety of I2C capable chips and modules.\nHere are some of the Adafruit projects that make use of I2C devices and modules:\n</p>\n\n<p>\n<a href=\"https://learn.adafruit.com/adafruits-raspberry-pi-lesson-4-gpio-setup/configuring-i2c\">https://learn.adafruit.com/adafruits-raspberry-pi-lesson-4-gpio-setup/configuring-i2c</a>\n</p>\n</div>\n\n\n<ul class=\"org-ul\"><li><a id=\"orgcbb0f11\"></a>Testing I2C<br /><div class=\"outline-text-4\" id=\"text-orgcbb0f11\">\n<p>\nNow when you log in you can type the following command to see all the connected devices\n</p>\n\n<pre class=\"example\">\n$ sudo i2cdetect -y 1\n</pre>\n</div></li></ul>\n</div>\n\n<div id=\"outline-container-orgc003a40\" class=\"outline-2\">\n<h2 id=\"orgc003a40\">Install Adafruit MPR121 on Raspberry</h2>\n<div class=\"outline-text-2\" id=\"text-orgc003a40\">\n<p>\nFirst make sure that you've installed python.\n</p>\n\n<pre class=\"example\">\nsudo apt-get update\nsudo apt-get install build-essential python-dev python-smbus python-pip git\n\n</pre>\n\n<p>\nThen clone Adafruit<sub>Python</sub><sub>MPR121.git</sub>\n</p>\n\n<pre class=\"example\">\ncd ~\ngit clone https://github.com/adafruit/Adafruit_Python_MPR121.git\n</pre>\n\n<p>\nand install it\n</p>\n\n<pre class=\"example\">\ncd Adafruit_Python_MPR121\nsudo python setup.py install\n\n</pre>\n</div>\n</div>\n\n<div id=\"outline-container-org83b9ca9\" class=\"outline-2\">\n<h2 id=\"org83b9ca9\">Usage</h2>\n<div class=\"outline-text-2\" id=\"text-org83b9ca9\">\n<pre class=\"example\">\ncd examples\nsudo python simpletest.py\n</pre>\n\n<p>\nThese are the output values of 12 capacitive touch inputs in SuperCollider.\n</p>\n\n<ul class=\"org-ul\">\n<li>0 = 1</li>\n<li>1 = 2</li>\n<li>2 = 4</li>\n<li>3 = 8</li>\n<li>4 = 16</li>\n<li>5 = 32</li>\n<li>6 = 64</li>\n<li>7 = 128</li>\n<li>8 = 256</li>\n<li>9 = 512</li>\n<li>10 = 1024</li>\n<li>11 = 2048</li>\n</ul>\n</div>\n\n<div id=\"outline-container-org5aee49c\" class=\"outline-3\">\n<h3 id=\"org5aee49c\">Set Autostart</h3>\n<div class=\"outline-text-3\" id=\"text-org5aee49c\">\n<ul class=\"org-ul\">\n<li><p>\nAutostart instructions for RPi\n</p>\n\n<p>\nSet RPi to autostart the scripts in Python and SuperCollider on boot.\n</p></li>\n</ul>\n\n<p>\nLet say that you have created the files:filename.scd (i.e mycode.scd) and filename.py (i.e mpr121.py) and you want to run them on boot. First, you\nneed to create 2 files (autostart.sh and pythonlauncher.sh)\nOpen terminal and type:\n</p>\n\n<pre class=\"example\">\n\n\nsudo nano ~/autostart.sh #and add the following lines:\n#!/bin/bash\n/usr/local/bin/jackd -P75 -dalsa -dhw:1 -p1024 -n3 -s -r44100 &amp;\nsu root -c \"sclang -D /home/pi/mycode.scd\"\n</pre>\n\n<p>\n(I used \"mycode.scd\", you can use your filename)\nCtrl-o #to save\nCtrl-x #to exit\n</p>\n\n<pre class=\"example\">\nsudo nano pythonlauncher.sh\n</pre>\n\n<p>\nand add the following lines:\n</p>\n\n<pre class=\"example\">\n#!/bin/sh\npythonlauncher.sh\ncd /\ncd home/pi\nsudo python mpr121.py\ncd /\n</pre>\n\n<p>\nWe need to make these 2 files executable:\n</p>\n\n<pre class=\"example\">\nchmod +x !/autostart.sh\nchmod 755 pytholauncher.sh\n</pre>\n\n<p>\nNext step is to tell the machine to run these files at reboot:\n<code>sudo crontab -e</code>\npaste the following lines:\n</p>\n\n<pre class=\"example\">\n@reboot /bin/bash /home/pi/autostart.sh\n@reboot /bin/sh /home/pi/pythonlauncher.sh\n</pre>\n\n<p>\nCtrl-o #to save\n</p>\n\n<p>\nCtrl-x #to exit\n</p>\n\n<p>\nreboot\n</p>\n</div>\n</div>\n</div>\n\n\n<div id=\"outline-container-orgdc08a9f\" class=\"outline-2\">\n<h2 id=\"orgdc08a9f\">Mind the fact Festival</h2>\n<div class=\"outline-text-2\" id=\"text-orgdc08a9f\">\n<p>\n26 Μαΐου 2017\n18.00-22.00\n</p>\n\n\n<p>\n27 Μαΐου 2017\n18.00-22.00\n</p>\n\n\n<p>\n28 Μαΐου 2017\n18.00-22.00\n</p>\n\n\n<p>\n29 Μαΐου 2017\n18.00-22.00\n</p>\n\n<p>\n<b>Σύλλογος Ελλήνων Αρχαιολόγων</b>\n</p>\n\n<p>\nΧορδή και ιστορία!\nΈνα ιδιαίτερο μουσικό ηχοτοπίο με φωνές των ανθρώπων της πόλης. Ιστορίες που υφαίνονται - κάθε φορά με διαφορετική σειρά - δημιουργούν αφηγηματικές συνθέσεις που μας μεταφέρουν σε διαφορετικές γειτονιές και παρουσιάζουν διαφορετικές προσωπογραφίες.\nΜέσω της διαδραστικής εγκατάστασης, οι επισκέπτες καλούνται να αγγίξουν τις κλωστές, ώστε να ακουστούν αποσπάσματα από μαρτυρίες ατόμων προερχομένων από ομάδες αστέγων, προσφύγων και πρώην εξαρτημένων από τυχερά παιχνίδια.\n</p>\n\n<p>\nΟι ηχογραφήσεις έγιναν στο πλαίσιο των εργαστηρίων του mind the fact.\n</p>\n\n<p>\nΣυντελεστές:\nΙδέα - συντονισμός: Γιάννης Ζάννος\n</p>\n\n<p>\nΠρογραμματισμός - ηχητικός σχεδιασμός: Βασίλης Αγιομυργιανάκης, Χρήστος Πούλιας\n</p>\n\n<p>\nΕικαστικός σχεδιασμός - υλοποίηση: Μάγδα Πλευράκη, Μάντυ Αλμπάνη, Λάουρα Κόντη, Αναστασία Τριανταφυλλίδου\n</p>\n</div>\n\n<div id=\"outline-container-orgde29f34\" class=\"outline-3\">\n<h3 id=\"orgde29f34\">Photos</h3>\n<div class=\"outline-text-3\" id=\"text-orgde29f34\">\n\n<div class=\"figure\">\n<p><img src=\"IMG_0348.jpg\"  />\n</p>\n</div>\n\n\n\n<div class=\"figure\">\n<p><img src=\"IMG_0349.JPG\"  />\n</p>\n</div>\n\n\n\n<div class=\"figure\">\n<p><img src=\"IMG_0350.JPG\"  />\n</p>\n</div>\n\n\n\n<div class=\"figure\">\n<p><img src=\"IMG_0351.JPG\"  />\n</p>\n</div>\n\n\n\n<div class=\"figure\">\n<p><img src=\"IMG_0352.jpg\"  />\n</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n"}
